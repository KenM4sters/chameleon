var Oe=Object.defineProperty;var je=(e,r,a)=>r in e?Oe(e,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[r]=a;var o=(e,r,a)=>je(e,typeof r!="symbol"?r+"":r,a);(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&i(l)}).observe(document,{childList:!0,subtree:!0});function a(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(n){if(n.ep)return;n.ep=!0;const s=a(n);fetch(n.href,s)}})();class Ve{constructor(){}}class ze{constructor(){}}class We{constructor(){}}class qe{constructor(){}}class Xe{constructor(){}}class Ye{constructor(){}}class Ke{constructor(){}}class Ue{constructor(){}}class $e extends Ue{constructor(){super()}}class Je extends Ue{constructor(){super()}}class Qe{constructor(){}}class Ze{constructor(){}}class et{constructor(){}}class tt extends Ve{constructor(){super();o(this,"vbo");o(this,"byteSize");this.vbo=0,this.byteSize=0}create(a){this.byteSize=a.byteSize;const i=t.createBuffer();if(!i)throw new Error("Failed to create vertex buffer!");this.vbo=i,t.bindBuffer(t.ARRAY_BUFFER,this.vbo),t.bufferData(t.ARRAY_BUFFER,a.data,t.STATIC_DRAW),t.bindBuffer(t.ARRAY_BUFFER,null)}update(a,i){t.bindBuffer(t.ARRAY_BUFFER,this.vbo),t.bufferSubData(t.ARRAY_BUFFER,i,a),t.bindBuffer(t.ARRAY_BUFFER,null)}destroy(){t.bindBuffer(t.ARRAY_BUFFER,null),t.deleteBuffer(this.vbo),this.vbo=0}getContextHandle(){return this.vbo}getByteSize(){return this.byteSize}}class at extends ze{constructor(){super();o(this,"ebo");o(this,"byteSize");this.ebo=0,this.byteSize=0}create(a){this.byteSize=a.byteSize;const i=t.createBuffer();if(!i)throw new Error("Failed to create index buffer!");this.ebo=i,t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.ebo),t.bufferData(t.ELEMENT_ARRAY_BUFFER,a.data,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)}update(a,i){t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.ebo),t.bufferSubData(t.ELEMENT_ARRAY_BUFFER,i,a),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)}destroy(){t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null),t.deleteBuffer(this.ebo),this.ebo=0}getContextHandle(){return this.ebo}getByteSize(){return this.byteSize}}class it extends We{constructor(){super();o(this,"ubo");o(this,"byteSize");this.ubo=0,this.byteSize=0}create(a){this.byteSize=a.byteSize;const i=t.createBuffer();if(!i)throw new Error("Failed to create uniform buffer!");this.ubo=i,t.bindBuffer(t.UNIFORM_BUFFER,this.ubo),t.bufferData(t.UNIFORM_BUFFER,a.data,t.STATIC_DRAW),t.bindBuffer(t.UNIFORM_BUFFER,null)}update(a,i){t.bindBuffer(t.UNIFORM_BUFFER,this.ubo),t.bufferSubData(t.UNIFORM_BUFFER,i,a),t.bindBuffer(t.UNIFORM_BUFFER,null)}destroy(){t.bindBuffer(t.UNIFORM_BUFFER,null),t.deleteBuffer(this.ubo),this.ubo=0}getContextHandle(){return this.ubo}getByteSize(){return this.byteSize}}class rt extends qe{constructor(){super();o(this,"program");this.program=0}create(a){const i=t.createShader(t.VERTEX_SHADER);if(i==null)throw new Error("Failed to create vertex shader!");t.shaderSource(i,a.vertCode),t.compileShader(i),t.getShaderInfoLog(i)&&console.log(t.getShaderInfoLog(i));const n=t.createShader(t.FRAGMENT_SHADER);if(n==null)throw new Error("Failed to create fragment shader!");t.shaderSource(n,a.fragCode),t.compileShader(n),t.getShaderInfoLog(n)&&console.log(t.getShaderInfoLog(n));const s=t.createProgram();if(!s)throw new Error("Failed to create shader program!");this.program=s,t.attachShader(this.program,i),t.attachShader(this.program,n),t.linkProgram(this.program),t.getProgramParameter(this.program,t.LINK_STATUS)||(console.warn("Could not initialise shaders"),console.log(t.getProgramInfoLog(this.program))),t.useProgram(this.program)}destroy(){t.useProgram(null),t.deleteProgram(this.program),this.program=0}getContextHandle(){return this.program}}class nt extends Qe{constructor(){super();o(this,"program");o(this,"resources",new Map)}create(a){this.program=a.program;for(let i=0;i<a.count;i++)this.resources.set(a.resources[i].getName(),a.resources[i]);t.useProgram(this.program.getContextHandle());for(const i of this.resources){const n=i[1];let s=0;if(n.getType()=="Sampler")t.uniform1i(t.getUniformLocation(this.program.getContextHandle(),i[0]),s),s++;else{let l=n;switch(n.getType()){case"Int":t.uniform1i(t.getUniformLocation(this.program.getContextHandle(),i[0]),l.getData());break;case"Float":t.uniform1f(t.getUniformLocation(this.program.getContextHandle(),i[0]),l.getData());break;case"Vec2i":t.uniform2iv(t.getUniformLocation(this.program.getContextHandle(),i[0]),l.getData());break;case"Vec2f":t.uniform2fv(t.getUniformLocation(this.program.getContextHandle(),i[0]),l.getData());break;case"Vec3i":t.uniform3iv(t.getUniformLocation(this.program.getContextHandle(),i[0]),l.getData());break;case"Vec3f":t.uniform3fv(t.getUniformLocation(this.program.getContextHandle(),i[0]),l.getData());break;case"Vec4i":t.uniform4iv(t.getUniformLocation(this.program.getContextHandle(),i[0]),l.getData());break;case"Vec4f":t.uniform4fv(t.getUniformLocation(this.program.getContextHandle(),i[0]),l.getData());break;case"Mat3x3f":t.uniformMatrix3fv(t.getUniformLocation(this.program.getContextHandle(),i[0]),!1,l.getData());break;case"Mat4x4f":t.uniformMatrix4fv(t.getUniformLocation(this.program.getContextHandle(),i[0]),!1,l.getData());break;default:t.uniform1i(t.getUniformLocation(this.program.getContextHandle(),i[0]),l.getData())}}}}bind(){t.useProgram(this.program.getContextHandle());for(const a of this.resources){const i=a[1];let n=0;if(i.getWriteFrequency()==v.Dynamic)if(i.getType()=="Sampler"){let l=i.getTexture();t.activeTexture(t.TEXTURE0+n),t.bindTexture(t.TEXTURE_2D,l.getContextHandle()),n++}else{let s=i;switch(i.getType()){case"Int":t.uniform1i(t.getUniformLocation(this.program.getContextHandle(),a[0]),s.getData());break;case"Float":t.uniform1f(t.getUniformLocation(this.program.getContextHandle(),a[0]),s.getData());break;case"Vec2i":t.uniform2iv(t.getUniformLocation(this.program.getContextHandle(),a[0]),s.getData());break;case"Vec2f":t.uniform2fv(t.getUniformLocation(this.program.getContextHandle(),a[0]),s.getData());break;case"Vec3i":t.uniform3iv(t.getUniformLocation(this.program.getContextHandle(),a[0]),s.getData());break;case"Vec3f":t.uniform3fv(t.getUniformLocation(this.program.getContextHandle(),a[0]),s.getData());break;case"Vec4i":t.uniform4iv(t.getUniformLocation(this.program.getContextHandle(),a[0]),s.getData());break;case"Vec4f":t.uniform4fv(t.getUniformLocation(this.program.getContextHandle(),a[0]),s.getData());break;case"Mat3x3f":t.uniformMatrix3fv(t.getUniformLocation(this.program.getContextHandle(),a[0]),!1,s.getData());break;case"Mat4x4f":t.uniformMatrix4fv(t.getUniformLocation(this.program.getContextHandle(),a[0]),!1,s.getData());break;default:t.uniform1i(t.getUniformLocation(this.program.getContextHandle(),a[0]),s.getData())}}}}destroy(){this.program.destroy(),this.resources.forEach(a=>{a.destroy()})}getProgram(){return this.program}getResources(){return this.resources}}class st extends Ze{constructor(){super();o(this,"vao");o(this,"vertexBuffer");o(this,"layout");o(this,"indexBuffer",null);o(this,"verticesCount");this.vao=0,this.indexBuffer=null,this.verticesCount=0}create(a){this.vertexBuffer=a.vBuffer,this.layout=a.layout,this.indexBuffer=a.iBuffer,this.verticesCount=a.verticesCount;const i=t.createVertexArray();if(!i)throw new Error("Failed to create vertex array object!");this.vao=i,t.bindVertexArray(this.vao),t.bindBuffer(t.ARRAY_BUFFER,this.vertexBuffer.getContextHandle()),this.indexBuffer&&t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer.getContextHandle());for(let n=0;n<this.layout.attributes.length;n++){const s=this.layout.attributes[n];t.vertexAttribPointer(n,s.count,t.FLOAT,!1,this.layout.stride,s.byteOffset),t.enableVertexAttribArray(n)}t.bindVertexArray(null),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)}destroy(){var a;this.vertexBuffer.destroy(),(a=this.indexBuffer)==null||a.destroy(),t.deleteVertexArray(this.vao),this.vao=0}getVerticesCount(){return this.verticesCount}getContextHandle(){return this.vao}getVertexBuffer(){return this.vertexBuffer}getIndexBuffer(){return this.indexBuffer}}class ot extends $e{constructor(){super();o(this,"name");o(this,"type");o(this,"writeFrequency");o(this,"accessType");o(this,"data");this.name="default_uniform",this.type="Float",this.writeFrequency=v.Dynamic,this.accessType=y.PerDrawCall,this.data=0}create(a){this.name=a.name,this.type=a.type,this.writeFrequency=v.Dynamic,this.accessType=y.PerDrawCall,this.data=a.data}destroy(){}update(a){this.data=a}getName(){return this.name}getType(){return this.type}getAccessType(){return this.accessType}getWriteFrequency(){return this.writeFrequency}getData(){return this.data}}class lt extends Je{constructor(){super();o(this,"name");o(this,"type");o(this,"writeFrequency");o(this,"accessType");o(this,"texture");this.name="default_texture",this.type="Sampler",this.writeFrequency=v.Dynamic,this.accessType=y.PerDrawCall}create(a){this.name=a.name,this.writeFrequency=v.Dynamic,this.accessType=y.PerDrawCall,this.texture=a.texture}destroy(){}update(a){}getName(){return this.name}getType(){return this.type}getAccessType(){return this.accessType}getWriteFrequency(){return this.writeFrequency}getTexture(){return this.texture}}class ht extends Xe{constructor(){super();o(this,"texture");o(this,"target");o(this,"format");o(this,"width");o(this,"height");o(this,"internalFormat");o(this,"type");o(this,"nMipMaps");o(this,"level");o(this,"usage");o(this,"sampler");o(this,"isCube");o(this,"data");this.texture=0,this.target=D.Texture2D,this.format=U.RGBA,this.width=0,this.height=0,this.internalFormat=V.RGBA32F,this.type=F.Float,this.nMipMaps=0,this.level=0,this.usage=z.ReadWrite,this.isCube=!1,this.data=null}create(a){this.target=a.target,this.format=a.format,this.width=a.width,this.height=a.height,this.internalFormat=a.internalFormat,this.type=a.type,this.nMipMaps=a.nMipMaps,this.level=a.level,this.usage=a.usage,this.data=a.data,this.sampler=a.sampler;const i=t.createTexture();if(!i)throw new Error("Failed to create texture object!");if(this.texture=i,t.bindTexture(M[this.target],this.texture),t.bindSampler(0,this.sampler.getContextHandle()),this.target==D.TextureCube){for(let n=0;n<6;n++)a.data instanceof HTMLImageElement?(t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!0),t.texImage2D(t.TEXTURE_CUBE_MAP_NEGATIVE_X+n,this.level,I[this.internalFormat],B[this.format],S[this.type],a.data),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!1)):t.texImage2D(t.TEXTURE_CUBE_MAP_NEGATIVE_X+n,this.level,I[this.internalFormat],this.width,this.height,0,B[this.format],S[this.type],a.data);this.isCube=!0}else a.data instanceof HTMLImageElement?(t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!0),t.texImage2D(M[a.target],this.level,I[this.internalFormat],B[this.format],S[this.type],a.data),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!1)):t.texImage2D(M[a.target],this.level,I[this.internalFormat],this.width,this.height,0,B[this.format],S[this.type],a.data);this.nMipMaps>0&&t.generateMipmap(M[this.target]),t.bindTexture(M[this.target],null)}destroy(){t.bindTexture(M[this.target],null),t.deleteTexture(this.texture)}resize(a,i){if(this.width=a,this.height=i,t.bindTexture(M[this.target],this.texture),t.bindSampler(0,this.sampler.getContextHandle()),this.target==D.TextureCube){for(let n=0;n<6;n++)this.data instanceof HTMLImageElement?(t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!0),t.texImage2D(t.TEXTURE_CUBE_MAP_NEGATIVE_X+n,this.level,I[this.internalFormat],B[this.format],S[this.type],this.data),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!1)):t.texImage2D(t.TEXTURE_CUBE_MAP_NEGATIVE_X+n,this.level,I[this.internalFormat],this.width,this.height,0,B[this.format],S[this.type],this.data);this.isCube=!0}else this.data instanceof HTMLImageElement?(t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!0),t.texImage2D(M[this.target],this.level,I[this.internalFormat],B[this.format],S[this.type],this.data),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!1)):t.texImage2D(M[this.target],this.level,I[this.internalFormat],this.width,this.height,0,B[this.format],S[this.type],this.data);this.nMipMaps>0&&t.generateMipmap(M[this.target]),t.bindTexture(M[this.target],null)}getContextHandle(){return this.texture}isCubeTexture(){return this.isCube}getWidth(){return this.width}getHeight(){return this.height}getInternalFormat(){return this.internalFormat}getFormat(){return this.format}getLevel(){return this.level}getType(){return this.type}getTarget(){return this.target}getMipMapCount(){return this.height}getUsage(){return this.usage}getSampler(){return this.sampler}}class ct extends Ye{constructor(){super();o(this,"addressModeS");o(this,"addressModeT");o(this,"addressModeR");o(this,"minFilter");o(this,"magFilter");o(this,"sampler");this.addressModeS=R.ClampToEdge,this.addressModeT=R.ClampToEdge,this.addressModeR=R.ClampToEdge,this.minFilter=k.Linear,this.magFilter=k.Linear,this.sampler=0}create(a){this.addressModeS=a.addressModeS,this.addressModeT=a.addressModeT,this.addressModeR=a.addressModeR,this.minFilter=a.minFilter,this.magFilter=a.magFilter;let i=t.createSampler();if(!i)throw new Error("Failed to create sampler!");this.sampler=i,t.bindSampler(0,this.sampler),t.samplerParameteri(this.sampler,t.TEXTURE_WRAP_S,q[this.addressModeS]),t.samplerParameteri(this.sampler,t.TEXTURE_WRAP_T,q[this.addressModeT]),t.samplerParameteri(this.sampler,t.TEXTURE_WRAP_R,q[this.addressModeR]),t.samplerParameteri(this.sampler,t.TEXTURE_MIN_FILTER,se[this.minFilter]),t.samplerParameteri(this.sampler,t.TEXTURE_MAG_FILTER,se[this.magFilter]),t.bindSampler(0,null)}update(a){this.addressModeS=a.addressModeS,this.addressModeT=a.addressModeT,this.addressModeR=a.addressModeR,this.minFilter=a.minFilter,this.magFilter=a.magFilter,t.bindSampler(t.TEXTURE_2D,this.sampler),t.samplerParameteri(this.sampler,t.TEXTURE_WRAP_S,q[this.addressModeS]),t.samplerParameteri(this.sampler,t.TEXTURE_WRAP_T,q[this.addressModeT]),t.samplerParameteri(this.sampler,t.TEXTURE_WRAP_R,q[this.addressModeR]),t.samplerParameteri(this.sampler,t.TEXTURE_MIN_FILTER,se[this.minFilter]),t.samplerParameteri(this.sampler,t.TEXTURE_MAG_FILTER,se[this.magFilter]),t.bindSampler(t.TEXTURE_2D,null)}detroy(){t.bindSampler(t.TEXTURE_2D,null),t.deleteSampler(this.sampler)}getContextHandle(){return this.sampler}}class mt extends Ke{constructor(){super();o(this,"fbo");o(this,"attachments");o(this,"count");this.fbo=0,this.attachments=[],this.count=0}create(a){this.attachments=a.attachments;const i=t.createFramebuffer();if(!i)throw new Error("Failed to create frame buffer object");this.fbo=i,t.bindFramebuffer(t.FRAMEBUFFER,this.fbo),this.attachments.forEach(n=>{const s=n.texture;t.framebufferTexture2D(t.FRAMEBUFFER,ce[n.attachment],M[s.getTarget()],s.getContextHandle(),s.getLevel()),t.checkFramebufferStatus(t.FRAMEBUFFER)!==t.FRAMEBUFFER_COMPLETE?console.error("Framebuffer is not complete"):console.log("Framebuffer is complete")}),t.bindFramebuffer(t.FRAMEBUFFER,null)}drawAttachments(){let a=[];for(const i of this.attachments)i.attachment<=X.Color3&&a.push(ce[i.attachment]);t.bindFramebuffer(t.FRAMEBUFFER,this.fbo),t.drawBuffers(a)}readPixels(a,i,n,s,l,h,c,d){t.bindFramebuffer(t.FRAMEBUFFER,this.fbo),t.readBuffer(ce[a]),t.readPixels(i,n,s,l,B[h],S[c],d)}blit(a,i,n,s,l,h,c,d,p,g){}clear(){t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT)}resize(a,i){}destroy(){t.bindFramebuffer(t.FRAMEBUFFER,0),t.deleteFramebuffer(this.fbo),this.attachments.forEach(a=>{a.texture.destroy()})}getContextHandle(){return this.fbo}}let A,t,se,q,M,I,B,ce,S;class Ge extends et{constructor(){super();o(this,"isLastBuffer");o(this,"MSAAFrameBuffer");o(this,"MSAARenderBuffer");this.isLastBuffer=!1}init(a){if(A=a.canvas,t=A.getContext("webgl2",{antialias:!1}),t.viewport(0,0,A.width,A.height),t.depthFunc(t.LEQUAL),t.enable(t.DEPTH_TEST),!t.getExtension("EXT_color_buffer_float"))throw new Error("EXT_color_buffer_float is not supported");if(!t.getExtension("OES_texture_float_linear"))throw new Error("OES_texture_float_linear is not supported");se=[t.NEAREST,t.LINEAR,t.LINEAR_MIPMAP_LINEAR,t.LINEAR_MIPMAP_NEAREST],q=[t.REPEAT,t.MIRRORED_REPEAT,t.CLAMP_TO_EDGE],M=[t.TEXTURE_2D,t.TEXTURE_2D_MULTISAMPLE,t.TEXTURE_CUBE_MAP],I=[t.R32I,t.R32F,t.RG,t.RG32F,t.RGB,t.RGB32F,t.RGBA,t.RGBA32F,t.DEPTH24_STENCIL8],B=[t.RG,t.RGB,t.RGBA,t.DEPTH_STENCIL],ce=[t.COLOR_ATTACHMENT0,t.COLOR_ATTACHMENT1,t.COLOR_ATTACHMENT2,t.COLOR_ATTACHMENT3,t.DEPTH_ATTACHMENT,t.STENCIL_ATTACHMENT,t.DEPTH_STENCIL_ATTACHMENT],S=[t.UNSIGNED_INT,t.INT,t.UNSIGNED_BYTE,t.BYTE,t.FLOAT,t.UNSIGNED_INT_24_8];const s=t.createFramebuffer();if(!s)throw new Error("Failed to create frame buffer!");this.MSAAFrameBuffer=s;const l=t.createRenderbuffer();if(!l)throw new Error("Failed to create render buffer!");this.MSAARenderBuffer=l,t.bindFramebuffer(t.FRAMEBUFFER,this.MSAAFrameBuffer),t.bindRenderbuffer(t.RENDERBUFFER,this.MSAARenderBuffer),t.renderbufferStorageMultisample(t.RENDERBUFFER,t.getParameter(t.MAX_SAMPLES),t.RGBA8,A.width,A.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,this.MSAARenderBuffer),t.checkFramebufferStatus(t.FRAMEBUFFER)!==t.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is not complete.")}shutdown(){}createVertexBuffer(a){let i=new tt;return i.create(a),i}createIndexBuffer(a){let i=new at;return i.create(a),i}createUniformBuffer(a){let i=new it;return i.create(a),i}createProgram(a){let i=new rt;return i.create(a),i}createTexture(a){let i=new ht;return i.create(a),i}createSampler(a){let i=new ct;return i.create(a),i}createFrameBuffer(a){let i=new mt;return i.create(a),i}createSamplerResource(a){let i=new lt;return i.create(a),i}createUniformResource(a){let i=new ot;return i.create(a),i}createShader(a){let i=new nt;return i.create(a),i}createVertexInput(a){let i=new st;return i.create(a),i}begin(a){if(a){this.isLastBuffer=!1;const i=a;t.bindFramebuffer(t.FRAMEBUFFER,i.getContextHandle())}else this.isLastBuffer=!0,t.bindFramebuffer(t.FRAMEBUFFER,this.MSAAFrameBuffer);t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),t.clearColor(.1,.1,.1,1)}end(){this.isLastBuffer?(t.bindFramebuffer(t.READ_FRAMEBUFFER,this.MSAAFrameBuffer),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null),t.blitFramebuffer(0,0,A.width,A.height,0,0,A.width,A.height,t.COLOR_BUFFER_BIT,t.LINEAR),t.bindFramebuffer(t.FRAMEBUFFER,null),t.bindFramebuffer(t.READ_FRAMEBUFFER,null),t.bindFramebuffer(t.DRAW_FRAMEBUFFER,null)):(t.bindFramebuffer(t.FRAMEBUFFER,null),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,null))}setViewport(a){t.viewport(0,0,a.pixelWidth,a.pixelHeight)}submit(a,i){let n=i,s=a;n.bind(),t.bindVertexArray(s.getContextHandle()),t.drawElements(t.TRIANGLES,s.getVerticesCount(),t.UNSIGNED_SHORT,0),t.useProgram(null),t.bindVertexArray(null)}}let E=new Ge;function ut(e){switch(e.backend){case 0:E=new Ge;break}E.init(e)}function Ee(e){return E.createVertexBuffer(e)}function Le(e){return E.createIndexBuffer(e)}function ue(e){return E.createProgram(e)}function J(e){return E.createTexture(e)}function de(e){return E.createSampler(e)}function Ce(e){return E.createFrameBuffer(e)}function pe(e){return E.createSamplerResource(e)}function T(e){return E.createUniformResource(e)}function ge(e){return E.createShader(e)}function Me(e){return E.createVertexInput(e)}function K(e){E.begin(e)}function oe(e){E.setViewport(e)}function $(){E.end()}function W(e,r){E.submit(e,r)}var He=(e=>(e[e.WebGL=0]="WebGL",e[e.WebGPU=1]="WebGPU",e[e.Count=2]="Count",e))(He||{}),R=(e=>(e[e.Repeat=0]="Repeat",e[e.MirroredRepeat=1]="MirroredRepeat",e[e.ClampToEdge=2]="ClampToEdge",e[e.Count=3]="Count",e))(R||{}),k=(e=>(e[e.Nearest=0]="Nearest",e[e.Linear=1]="Linear",e[e.MipMapNearest=2]="MipMapNearest",e[e.MipMapLinear=3]="MipMapLinear",e[e.Count=4]="Count",e))(k||{}),D=(e=>(e[e.Texture2D=0]="Texture2D",e[e.TextureCube=1]="TextureCube",e[e.Texture2DMultisample=2]="Texture2DMultisample",e[e.Count=3]="Count",e))(D||{}),V=(e=>(e[e.R32=0]="R32",e[e.R32F=1]="R32F",e[e.RG32=2]="RG32",e[e.RG32F=3]="RG32F",e[e.RGB32=4]="RGB32",e[e.RGB32F=5]="RGB32F",e[e.RGBA32=6]="RGBA32",e[e.RGBA32F=7]="RGBA32F",e[e.Depth24Stencil8=8]="Depth24Stencil8",e[e.Count=9]="Count",e))(V||{}),U=(e=>(e[e.RG=0]="RG",e[e.RGB=1]="RGB",e[e.RGBA=2]="RGBA",e[e.DepthStencil=3]="DepthStencil",e[e.Count=4]="Count",e))(U||{}),X=(e=>(e[e.Color0=0]="Color0",e[e.Color1=1]="Color1",e[e.Color2=2]="Color2",e[e.Color3=3]="Color3",e[e.Depth=4]="Depth",e[e.Stencil=5]="Stencil",e[e.DepthStencil=6]="DepthStencil",e[e.Count=7]="Count",e))(X||{}),F=(e=>(e[e.UInt=0]="UInt",e[e.SInt=1]="SInt",e[e.UChar=2]="UChar",e[e.SChar=3]="SChar",e[e.Float=4]="Float",e[e.UInt24_8=5]="UInt24_8",e[e.Count=6]="Count",e))(F||{}),z=(e=>(e[e.ReadOnly=0]="ReadOnly",e[e.WriteOnly=1]="WriteOnly",e[e.ReadWrite=2]="ReadWrite",e))(z||{}),v=(e=>(e[e.Static=0]="Static",e[e.Dynamic=1]="Dynamic",e))(v||{}),y=(e=>(e[e.PerFrame=0]="PerFrame",e[e.PerMaterial=1]="PerMaterial",e[e.PerDrawCall=2]="PerDrawCall",e))(y||{});class Y{constructor(r,a,i){o(this,"attribute");o(this,"type");o(this,"count");o(this,"byteOffset");o(this,"byteSize");switch(this.attribute=r,this.type=a,this.count=i,this.byteOffset=0,a){case 0:this.byteSize=i*4;break;case 1:this.byteSize=i*4;break;case 2:this.byteSize=i*1;break;case 3:this.byteSize=i*1;break;case 4:this.byteSize=i*4;break;default:this.byteSize=i*4;break}}}class Te{constructor(r,a){o(this,"attributes");o(this,"count");o(this,"stride");this.attributes=r,this.count=a,this.stride=0;for(let i=0;i<a;i++)this.attributes[i].byteOffset=this.stride,this.stride+=r[i].byteSize}}var ye=1e-6,P=typeof Float32Array<"u"?Float32Array:Array,dt=Math.PI/180;function pt(e){return e*dt}Math.hypot||(Math.hypot=function(){for(var e=0,r=arguments.length;r--;)e+=arguments[r]*arguments[r];return Math.sqrt(e)});function C(){var e=new P(16);return P!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function gt(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function ke(e,r){var a=r[0],i=r[1],n=r[2],s=r[3],l=r[4],h=r[5],c=r[6],d=r[7],p=r[8],g=r[9],f=r[10],m=r[11],_=r[12],u=r[13],b=r[14],L=r[15],G=a*h-i*l,H=a*c-n*l,N=a*d-s*l,O=i*c-n*h,j=i*d-s*h,Z=n*d-s*c,ee=p*u-g*_,te=p*b-f*_,ae=p*L-m*_,ie=g*b-f*u,re=g*L-m*u,ne=f*L-m*b,w=G*ne-H*re+N*ie+O*ae-j*te+Z*ee;return w?(w=1/w,e[0]=(h*ne-c*re+d*ie)*w,e[1]=(n*re-i*ne-s*ie)*w,e[2]=(u*Z-b*j+L*O)*w,e[3]=(f*j-g*Z-m*O)*w,e[4]=(c*ae-l*ne-d*te)*w,e[5]=(a*ne-n*ae+s*te)*w,e[6]=(b*N-_*Z-L*H)*w,e[7]=(p*Z-f*N+m*H)*w,e[8]=(l*re-h*ae+d*ee)*w,e[9]=(i*ae-a*re-s*ee)*w,e[10]=(_*j-u*N+L*G)*w,e[11]=(g*N-p*j-m*G)*w,e[12]=(h*te-l*ie-c*ee)*w,e[13]=(a*ie-i*te+n*ee)*w,e[14]=(u*H-_*O-b*G)*w,e[15]=(p*O-g*H+f*G)*w,e):null}function le(e,r,a){var i=a[0],n=a[1],s=a[2],l,h,c,d,p,g,f,m,_,u,b,L;return r===e?(e[12]=r[0]*i+r[4]*n+r[8]*s+r[12],e[13]=r[1]*i+r[5]*n+r[9]*s+r[13],e[14]=r[2]*i+r[6]*n+r[10]*s+r[14],e[15]=r[3]*i+r[7]*n+r[11]*s+r[15]):(l=r[0],h=r[1],c=r[2],d=r[3],p=r[4],g=r[5],f=r[6],m=r[7],_=r[8],u=r[9],b=r[10],L=r[11],e[0]=l,e[1]=h,e[2]=c,e[3]=d,e[4]=p,e[5]=g,e[6]=f,e[7]=m,e[8]=_,e[9]=u,e[10]=b,e[11]=L,e[12]=l*i+p*n+_*s+r[12],e[13]=h*i+g*n+u*s+r[13],e[14]=c*i+f*n+b*s+r[14],e[15]=d*i+m*n+L*s+r[15]),e}function fe(e,r,a){var i=a[0],n=a[1],s=a[2];return e[0]=r[0]*i,e[1]=r[1]*i,e[2]=r[2]*i,e[3]=r[3]*i,e[4]=r[4]*n,e[5]=r[5]*n,e[6]=r[6]*n,e[7]=r[7]*n,e[8]=r[8]*s,e[9]=r[9]*s,e[10]=r[10]*s,e[11]=r[11]*s,e[12]=r[12],e[13]=r[13],e[14]=r[14],e[15]=r[15],e}function ft(e,r,a,i,n){var s=1/Math.tan(r/2),l;return e[0]=s/a,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=s,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,n!=null&&n!==1/0?(l=1/(i-n),e[10]=(n+i)*l,e[14]=2*n*i*l):(e[10]=-1,e[14]=-2*i),e}var _t=ft;function bt(e,r,a,i){var n,s,l,h,c,d,p,g,f,m,_=r[0],u=r[1],b=r[2],L=i[0],G=i[1],H=i[2],N=a[0],O=a[1],j=a[2];return Math.abs(_-N)<ye&&Math.abs(u-O)<ye&&Math.abs(b-j)<ye?gt(e):(p=_-N,g=u-O,f=b-j,m=1/Math.hypot(p,g,f),p*=m,g*=m,f*=m,n=G*f-H*g,s=H*p-L*f,l=L*g-G*p,m=Math.hypot(n,s,l),m?(m=1/m,n*=m,s*=m,l*=m):(n=0,s=0,l=0),h=g*l-f*s,c=f*n-p*l,d=p*s-g*n,m=Math.hypot(h,c,d),m?(m=1/m,h*=m,c*=m,d*=m):(h=0,c=0,d=0),e[0]=n,e[1]=h,e[2]=p,e[3]=0,e[4]=s,e[5]=c,e[6]=g,e[7]=0,e[8]=l,e[9]=d,e[10]=f,e[11]=0,e[12]=-(n*_+s*u+l*b),e[13]=-(h*_+c*u+d*b),e[14]=-(p*_+g*u+f*b),e[15]=1,e)}function vt(e,r,a,i){var n=r[0],s=r[1],l=r[2],h=i[0],c=i[1],d=i[2],p=n-a[0],g=s-a[1],f=l-a[2],m=p*p+g*g+f*f;m>0&&(m=1/Math.sqrt(m),p*=m,g*=m,f*=m);var _=c*f-d*g,u=d*p-h*f,b=h*g-c*p;return m=_*_+u*u+b*b,m>0&&(m=1/Math.sqrt(m),_*=m,u*=m,b*=m),e[0]=_,e[1]=u,e[2]=b,e[3]=0,e[4]=g*b-f*u,e[5]=f*_-p*b,e[6]=p*u-g*_,e[7]=0,e[8]=p,e[9]=g,e[10]=f,e[11]=0,e[12]=n,e[13]=s,e[14]=l,e[15]=1,e}function Ne(){var e=new P(3);return P!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function yt(e){var r=e[0],a=e[1],i=e[2];return Math.hypot(r,a,i)}function me(e,r,a){var i=new P(3);return i[0]=e,i[1]=r,i[2]=a,i}function wt(e,r,a){return e[0]=r[0]-a[0],e[1]=r[1]-a[1],e[2]=r[2]-a[2],e}(function(){var e=Ne();return function(r,a,i,n,s,l){var h,c;for(a||(a=3),i||(i=0),n?c=Math.min(n*a+i,r.length):c=r.length,h=i;h<c;h+=a)e[0]=r[h],e[1]=r[h+1],e[2]=r[h+2],s(e,e,l),r[h]=e[0],r[h+1]=e[1],r[h+2]=e[2];return r}})();function Re(){var e=new P(4);return P!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0,e[3]=0),e}function xt(e,r,a,i){var n=new P(4);return n[0]=e,n[1]=r,n[2]=a,n[3]=i,n}function Rt(e,r,a){return e[0]=r[0]*a,e[1]=r[1]*a,e[2]=r[2]*a,e[3]=r[3]*a,e}function Ae(e,r,a){var i=r[0],n=r[1],s=r[2],l=r[3];return e[0]=a[0]*i+a[4]*n+a[8]*s+a[12]*l,e[1]=a[1]*i+a[5]*n+a[9]*s+a[13]*l,e[2]=a[2]*i+a[6]*n+a[10]*s+a[14]*l,e[3]=a[3]*i+a[7]*n+a[11]*s+a[15]*l,e}(function(){var e=Re();return function(r,a,i,n,s,l){var h,c;for(a||(a=4),i||(i=0),n?c=Math.min(n*a+i,r.length):c=r.length,h=i;h<c;h+=a)e[0]=r[h],e[1]=r[h+1],e[2]=r[h+2],e[3]=r[h+3],s(e,e,l),r[h]=e[0],r[h+1]=e[1],r[h+2]=e[2],r[h+3]=e[3];return r}})();function Fe(){var e=new P(2);return P!=Float32Array&&(e[0]=0,e[1]=0),e}(function(){var e=Fe();return function(r,a,i,n,s,l){var h,c;for(a||(a=2),i||(i=0),n?c=Math.min(n*a+i,r.length):c=r.length,h=i;h<c;h+=a)e[0]=r[h],e[1]=r[h+1],s(e,e,l),r[h]=e[0],r[h+1]=e[1];return r}})();class Ft{constructor(r,a=[0,0,0],i=[0,1,0],n=[1,0,0],s=.1,l=100,h=45){o(this,"position");o(this,"target");o(this,"up");o(this,"right");o(this,"near");o(this,"far");o(this,"zoom");this.position=r,this.target=a,this.up=i,this.right=n,this.near=s,this.far=l,this.zoom=h}GetProjectionMatrix(r,a){return _t(C(),pt(this.zoom),r/a,this.near,this.far)}GetViewMatrix(){return bt(C(),this.position,this.target,this.up)}}let _e=new Float32Array([-1,-1,0,0,0,1,-1,0,1,0,1,1,0,1,1,-1,1,0,0,1]),Q=new Float32Array([0,1,2,0,3,2]),Be=new Float32Array([-1,-1,1,0,0,1,0,0,1,-1,1,0,0,1,1,0,1,1,1,0,0,1,1,1,-1,1,1,0,0,1,0,1,-1,-1,-1,0,0,-1,9,9,1,-1,-1,0,0,-1,9,9,1,1,-1,0,0,-1,9,9,-1,1,-1,0,0,-1,9,9,-1,1,1,-1,0,0,9,9,-1,1,-1,-1,0,0,9,9,-1,-1,-1,-1,0,0,9,9,-1,-1,1,-1,0,0,9,9,1,1,1,1,0,0,9,9,1,-1,-1,1,0,0,9,9,1,1,-1,1,0,0,9,9,1,-1,1,1,0,0,9,9,-1,1,1,0,1,0,9,9,1,1,1,0,1,0,9,9,1,1,-1,0,1,0,9,9,-1,1,-1,0,1,0,9,9,-1,-1,1,0,-1,0,9,9,1,-1,1,0,-1,0,9,9,1,-1,-1,0,-1,0,9,9,-1,-1,-1,0,-1,0,9,9]),we=new Uint16Array([0,1,2,2,3,0,4,5,6,6,7,4,8,9,10,10,11,8,12,13,14,14,15,12,16,17,18,18,19,16,20,21,22,22,23,20]);const Se=`#version 300 es

in vec3 a_position; 
in vec2 a_uv;

out vec2 v_uv;
out vec3 v_clipPosition;

void main() 
{
    v_uv = a_uv;

    vec4 clipPosition = vec4(a_position, 1.0);

    v_clipPosition = vec3(clipPosition);

    gl_Position = clipPosition;
}`,De=`#version 300 es
precision highp float;

out vec4 frag_color;

in vec2 v_uv;
in vec3 v_clipPosition;

uniform sampler2D s_srcTexture;


void main() 
{   
    frag_color = vec4(texture(s_srcTexture, v_uv).rgb, 1.0);
}`;var x=(e=>(e[e.mammoth=0]="mammoth",e[e.silverback=1]="silverback",e[e.wgpu=2]="wgpu",e[e.chameleon=3]="chameleon",e[e.pbr=4]="pbr",e[e.sandbox=5]="sandbox",e[e.vulkanLights=6]="vulkanLights",e[e.raytracer=7]="raytracer",e[e.shmup=8]="shmup",e[e.bankingApp=9]="bankingApp",e[e.gamesList=10]="gamesList",e[e.actixWeb=11]="actixWeb",e[e.gravitySimulator=12]="gravitySimulator",e[e.primeNumbers=13]="primeNumbers",e[e.count=14]="count",e))(x||{});class Et{constructor(){o(this,"vbo");o(this,"ebo");o(this,"layout");o(this,"input");o(this,"linear_clamp_sampler");o(this,"linear_nearest_sampler");o(this,"sceneColorTexture");o(this,"meshIdTexture");o(this,"sceneDepthTexture");o(this,"FXAATexture");o(this,"sceneBuffer");o(this,"fxaaBuffer");o(this,"mesh_id_shader");o(this,"fxaaShader");o(this,"displayShader");o(this,"highResolutionFactor",2)}create(r,a){this.vbo=Ee({data:new Float32Array(_e),byteSize:_e.length*4}),this.ebo=Le({data:new Uint16Array(Q),byteSize:Q.length*4}),this.layout=new Te([new Y("Position",F.Float,3),new Y("TexCoords",F.Float,2)],2),this.input=Me({vBuffer:this.vbo,iBuffer:this.ebo,layout:this.layout,verticesCount:Q.length}),this.linear_clamp_sampler=de({addressModeS:R.ClampToEdge,addressModeT:R.ClampToEdge,addressModeR:R.ClampToEdge,minFilter:k.Linear,magFilter:k.Linear}),this.linear_nearest_sampler=de({addressModeS:R.ClampToEdge,addressModeT:R.ClampToEdge,addressModeR:R.ClampToEdge,minFilter:k.Nearest,magFilter:k.Nearest}),this.sceneDepthTexture=J({target:D.Texture2D,nMipMaps:0,level:0,internalFormat:V.Depth24Stencil8,format:U.DepthStencil,type:F.UInt24_8,usage:z.ReadWrite,sampler:this.linear_clamp_sampler,width:window.innerWidth*this.highResolutionFactor,height:window.innerHeight*this.highResolutionFactor,data:null}),this.sceneColorTexture=J({target:D.Texture2D,nMipMaps:0,level:0,internalFormat:V.RGBA32F,format:U.RGBA,type:F.Float,usage:z.ReadWrite,sampler:this.linear_clamp_sampler,width:window.innerWidth*this.highResolutionFactor,height:window.innerHeight*this.highResolutionFactor,data:null}),this.meshIdTexture=J({target:D.Texture2D,nMipMaps:0,level:0,internalFormat:V.RGBA32F,format:U.RGBA,type:F.Float,usage:z.ReadWrite,sampler:this.linear_nearest_sampler,width:window.innerWidth*this.highResolutionFactor,height:window.innerHeight*this.highResolutionFactor,data:null});let i={texture:this.sceneDepthTexture,attachment:X.DepthStencil},n={texture:this.sceneColorTexture,attachment:X.Color0},s={texture:this.meshIdTexture,attachment:X.Color1};this.sceneBuffer=Ce({attachments:[n,s,i],count:3}),this.sceneBuffer.drawAttachments(),this.FXAATexture=J({target:D.Texture2D,nMipMaps:0,level:0,internalFormat:V.RGBA32F,format:U.RGBA,type:F.Float,usage:z.ReadWrite,sampler:this.linear_clamp_sampler,width:window.innerWidth,height:window.innerHeight,data:null});let l={texture:this.FXAATexture,attachment:X.Color0};this.fxaaBuffer=Ce({attachments:[l],count:1});let h=C(),c=T({name:"u_model",type:"Mat4x4f",data:new Float32Array(h),accessType:y.PerDrawCall,writeFrequency:v.Dynamic}),d=ue({vertCode:Se,fragCode:De}),p=pe({name:"s_srcTexture",texture:this.sceneColorTexture,writeFrequency:v.Dynamic,accessType:y.PerDrawCall});this.fxaaShader=ge({program:d,resources:[c,p,r],count:3});let g=ue({vertCode:Se,fragCode:De}),f=pe({name:"s_srcTexture",texture:this.FXAATexture,writeFrequency:v.Dynamic,accessType:y.PerDrawCall});this.displayShader=ge({program:g,resources:[c,f],count:2})}render(r,a){K(this.sceneBuffer),oe({pixelWidth:window.innerWidth*this.highResolutionFactor,pixelHeight:window.innerHeight*this.highResolutionFactor}),r.traverse(i=>{W(r.cube_input,i.shader)}),W(a.input,a.shader),$(),K(this.fxaaBuffer),oe({pixelWidth:window.innerWidth,pixelHeight:window.innerHeight}),W(this.input,this.fxaaShader),$(),K(null),W(this.input,this.displayShader),$()}renderBackgroundOnly(r){K(this.sceneBuffer),oe({pixelWidth:window.innerWidth*this.highResolutionFactor,pixelHeight:window.innerHeight*this.highResolutionFactor}),W(r.input,r.shader),$(),K(this.fxaaBuffer),oe({pixelWidth:window.innerWidth,pixelHeight:window.innerHeight}),W(this.input,this.fxaaShader),$(),K(null),W(this.input,this.displayShader),$()}destroy(){this.sceneBuffer.destroy()}resize(r,a){this.sceneColorTexture.resize(r*this.highResolutionFactor,a*this.highResolutionFactor),this.meshIdTexture.resize(r*this.highResolutionFactor,a*this.highResolutionFactor),this.sceneDepthTexture.resize(r*this.highResolutionFactor,a*this.highResolutionFactor),this.FXAATexture.resize(r,a)}}let Pe=[],xe="about";class ve{constructor(){}onViewChange(r){Pe.push(r)}triggerViewChange(r){r!=xe&&(xe=r,Pe.forEach(a=>a(r)))}getCurrentView(){return xe}}let Lt=["mammoth","silverback","wgpu","chameleon","pbr","sandbox","vulkanLights","raytracer","shmup","bankingApp","gamesList","actixWeb","gravitySimulator","primeNumbers"];class Mt extends ve{constructor(){super();o(this,"contentWrapper");this.handleViewChange=this.handleViewChange.bind(this),this.onViewChange(this.handleViewChange);const a=document.querySelector(".content_wrapper");if(!a)throw new Error("Failed to find dom element with class list containing: content_wrapper");this.contentWrapper=a,window.addEventListener("popstate",i=>{this.triggerViewChange(i.state?i.state.path:"home")}),this.triggerViewChange("home")}navigateTo(a){const i=`/chameleon/${a}`;history.pushState({path:a},"",i),this.handleNavigation(a)}handleNavigation(a){document.querySelectorAll(".content_section").forEach(s=>{s.id!=a&&(s.classList.remove("fade_in"),s.classList.add("fade_out"),s.classList.remove("active"))});const n=document.getElementById(a);if(n)n.classList.add("active"),n.classList.remove("fade_out"),n.classList.add("fade_in");else{let s=document.getElementById("home");if(!s)throw new Error("Failed to find dom element with id: home");s.classList.add("active")}}handleViewChange(a){this.navigateTo(a)}}const be=class be{constructor(){o(this,"textures",new Map);o(this,"status",0)}LoadAllAssets(r){for(const a of Ie)if(a.type=="LDR"){const i=new Image;i.src=a.path,i.addEventListener("load",()=>{this.textures.set(a.name,i),this.UpdateStatus(r)})}}UpdateStatus(r){this.status+=1,this.status==Ie.length&&r()}GetTexture(r){return this.textures.get(r)}static GetInstance(){return this.instance||(this.instance=new be),this.instance}};o(be,"instance");let he=be;const Ie=[{name:"mammoth_1",type:"LDR",path:"/chameleon/images/mammoth/mammoth_1.png"},{name:"mammoth_2",type:"LDR",path:"/chameleon/images/mammoth/mammoth_2.png"},{name:"mammoth_3",type:"LDR",path:"/chameleon/images/mammoth/mammoth_3.png"},{name:"mammoth_4",type:"LDR",path:"/chameleon/images/mammoth/mammoth_4.png"},{name:"mammoth_5",type:"LDR",path:"/chameleon/images/mammoth/mammoth_5.png"},{name:"mammoth_6",type:"LDR",path:"/chameleon/images/mammoth/mammoth_6.png"},{name:"silverback_1",type:"LDR",path:"/chameleon/images/silverback/silverback_1.png"},{name:"silverback_2",type:"LDR",path:"/chameleon/images/silverback/silverback_2.png"},{name:"silverback_3",type:"LDR",path:"/chameleon/images/silverback/silverback_3.png"},{name:"silverback_4",type:"LDR",path:"/chameleon/images/silverback/silverback_4.png"},{name:"silverback_5",type:"LDR",path:"/chameleon/images/silverback/silverback_5.png"},{name:"silverback_6",type:"LDR",path:"/chameleon/images/silverback/silverback_6.png"},{name:"wgpu_1",type:"LDR",path:"/chameleon/images/wgpu/wgpu_1.png"},{name:"wgpu_2",type:"LDR",path:"/chameleon/images/wgpu/wgpu_2.png"},{name:"wgpu_3",type:"LDR",path:"/chameleon/images/wgpu/wgpu_3.png"},{name:"wgpu_4",type:"LDR",path:"/chameleon/images/wgpu/wgpu_4.png"},{name:"wgpu_5",type:"LDR",path:"/chameleon/images/wgpu/wgpu_5.png"},{name:"wgpu_6",type:"LDR",path:"/chameleon/images/wgpu/wgpu_6.png"},{name:"chameleon_1",type:"LDR",path:"/chameleon/images/chameleon/chameleon_1.png"},{name:"chameleon_2",type:"LDR",path:"/chameleon/images/chameleon/chameleon_2.png"},{name:"chameleon_3",type:"LDR",path:"/chameleon/images/chameleon/chameleon_3.png"},{name:"chameleon_4",type:"LDR",path:"/chameleon/images/chameleon/chameleon_4.png"},{name:"chameleon_5",type:"LDR",path:"/chameleon/images/chameleon/chameleon_5.png"},{name:"chameleon_6",type:"LDR",path:"/chameleon/images/chameleon/chameleon_6.png"},{name:"pbr_1",type:"LDR",path:"/chameleon/images/pbr/pbr_1.png"},{name:"pbr_2",type:"LDR",path:"/chameleon/images/pbr/pbr_2.png"},{name:"pbr_3",type:"LDR",path:"/chameleon/images/pbr/pbr_3.png"},{name:"pbr_4",type:"LDR",path:"/chameleon/images/pbr/pbr_4.png"},{name:"pbr_5",type:"LDR",path:"/chameleon/images/pbr/pbr_5.png"},{name:"pbr_6",type:"LDR",path:"/chameleon/images/pbr/pbr_6.png"},{name:"sandbox_1",type:"LDR",path:"/chameleon/images/sandbox/sandbox_1.png"},{name:"sandbox_2",type:"LDR",path:"/chameleon/images/sandbox/sandbox_2.png"},{name:"sandbox_3",type:"LDR",path:"/chameleon/images/sandbox/sandbox_3.png"},{name:"sandbox_4",type:"LDR",path:"/chameleon/images/sandbox/sandbox_4.png"},{name:"sandbox_5",type:"LDR",path:"/chameleon/images/sandbox/sandbox_5.png"},{name:"sandbox_6",type:"LDR",path:"/chameleon/images/sandbox/sandbox_6.png"},{name:"vulkan_lights_1",type:"LDR",path:"/chameleon/images/vulkan_lights/vulkan_lights_1.png"},{name:"vulkan_lights_2",type:"LDR",path:"/chameleon/images/vulkan_lights/vulkan_lights_2.png"},{name:"vulkan_lights_3",type:"LDR",path:"/chameleon/images/vulkan_lights/vulkan_lights_3.png"},{name:"vulkan_lights_4",type:"LDR",path:"/chameleon/images/vulkan_lights/vulkan_lights_4.png"},{name:"vulkan_lights_5",type:"LDR",path:"/chameleon/images/vulkan_lights/vulkan_lights_5.png"},{name:"vulkan_lights_6",type:"LDR",path:"/chameleon/images/vulkan_lights/vulkan_lights_6.png"},{name:"raytracer_1",type:"LDR",path:"/chameleon/images/raytracer/raytracer_1.png"},{name:"raytracer_2",type:"LDR",path:"/chameleon/images/raytracer/raytracer_2.png"},{name:"raytracer_3",type:"LDR",path:"/chameleon/images/raytracer/raytracer_3.png"},{name:"raytracer_4",type:"LDR",path:"/chameleon/images/raytracer/raytracer_4.png"},{name:"raytracer_5",type:"LDR",path:"/chameleon/images/raytracer/raytracer_5.png"},{name:"raytracer_6",type:"LDR",path:"/chameleon/images/raytracer/raytracer_6.png"},{name:"shmup_1",type:"LDR",path:"/chameleon/images/shmup/shmup_1.png"},{name:"shmup_2",type:"LDR",path:"/chameleon/images/shmup/shmup_2.png"},{name:"shmup_3",type:"LDR",path:"/chameleon/images/shmup/shmup_3.png"},{name:"shmup_4",type:"LDR",path:"/chameleon/images/shmup/shmup_4.png"},{name:"shmup_5",type:"LDR",path:"/chameleon/images/shmup/shmup_5.png"},{name:"shmup_6",type:"LDR",path:"/chameleon/images/shmup/shmup_6.png"},{name:"banking_app_1",type:"LDR",path:"/chameleon/images/banking_app/banking_app_1.png"},{name:"banking_app_2",type:"LDR",path:"/chameleon/images/banking_app/banking_app_2.png"},{name:"banking_app_3",type:"LDR",path:"/chameleon/images/banking_app/banking_app_3.png"},{name:"banking_app_4",type:"LDR",path:"/chameleon/images/banking_app/banking_app_4.png"},{name:"banking_app_5",type:"LDR",path:"/chameleon/images/banking_app/banking_app_5.png"},{name:"banking_app_6",type:"LDR",path:"/chameleon/images/banking_app/banking_app_6.png"},{name:"games_list_1",type:"LDR",path:"/chameleon/images/games_list/games_list_1.png"},{name:"games_list_2",type:"LDR",path:"/chameleon/images/games_list/games_list_2.png"},{name:"games_list_3",type:"LDR",path:"/chameleon/images/games_list/games_list_3.png"},{name:"games_list_4",type:"LDR",path:"/chameleon/images/games_list/games_list_4.png"},{name:"games_list_5",type:"LDR",path:"/chameleon/images/games_list/games_list_5.png"},{name:"games_list_6",type:"LDR",path:"/chameleon/images/games_list/games_list_6.png"},{name:"actix_web_1",type:"LDR",path:"/chameleon/images/actix_web/actix_web_1.png"},{name:"actix_web_2",type:"LDR",path:"/chameleon/images/actix_web/actix_web_2.png"},{name:"actix_web_3",type:"LDR",path:"/chameleon/images/actix_web/actix_web_3.png"},{name:"actix_web_4",type:"LDR",path:"/chameleon/images/actix_web/actix_web_4.png"},{name:"actix_web_5",type:"LDR",path:"/chameleon/images/actix_web/actix_web_5.png"},{name:"actix_web_6",type:"LDR",path:"/chameleon/images/actix_web/actix_web_6.png"},{name:"gravity_simulator_1",type:"LDR",path:"/chameleon/images/gravity_simulator/gravity_simulator_1.png"},{name:"prime_numbers_1",type:"LDR",path:"/chameleon/images/prime_numbers/prime_numbers_1.png"},{name:"background_1",type:"LDR",path:"/chameleon/images/background/water_normals.jpg"}],Tt=`#version 300 es

in vec3 a_position; 
in vec3 a_normal; 
in vec2 a_uv;

out vec2 v_uv;
out vec3 v_normal;
out vec3 v_clipPosition;

uniform mat4 u_projection;
uniform mat4 u_view;
uniform mat4 u_model;

void main() 
{
    v_uv = a_uv;
    v_normal = a_normal;
    
    vec4 clipPosition = u_projection * u_view * u_model * vec4(a_position, 1.0);

    v_clipPosition = vec3(clipPosition);

    gl_Position = clipPosition;
}`,Ct=`#version 300 es
precision highp float;

layout(location = 0) out vec4 scene_color;
layout(location = 1) out vec4 mesh_id_color;

in vec2 v_uv;
in vec3 v_clipPosition;

uniform int u_projectId;
uniform int u_isIntersected;
uniform sampler2D s_srcTexture;


void main() 
{   
    float opacity = 1.0 - v_clipPosition.z;

    if(v_uv.x >= 1.0) 
    {
        scene_color = vec4(0.1, 0.1, 0.1, 1.0);
    }
    else 
    {
        scene_color = vec4(texture(s_srcTexture, v_uv).rgb, 1.0);
    };

    if(u_isIntersected > 0) 
    {
        scene_color.xyz += vec3(0.05); 
    }

    mesh_id_color = vec4(u_projectId, 0.0, 0.0, 0.0);
}`;class kt{constructor(){o(this,"primary_texture");o(this,"shader");o(this,"uModelMatrix");o(this,"uIsIntersected");o(this,"uProjectId");o(this,"sTexture");o(this,"modelMatrix");o(this,"isIntersected");o(this,"position");o(this,"scale");o(this,"label");o(this,"id");this.label="",this.position=[0,0,0],this.scale=[1,1,1]}create(r,a,i,n){this.id=r.id,this.label=r.label,this.position=r.translation,this.scale=r.scale,this.primary_texture=J({target:D.Texture2D,nMipMaps:0,level:0,internalFormat:V.RGB32,format:U.RGB,type:F.UChar,usage:z.ReadWrite,sampler:r.sampler,width:a.width,height:a.height,data:a}),this.modelMatrix=C(),le(this.modelMatrix,this.modelMatrix,this.position),fe(this.modelMatrix,this.modelMatrix,this.scale),this.uModelMatrix=T({name:"u_model",type:"Mat4x4f",data:new Float32Array(this.modelMatrix),accessType:y.PerDrawCall,writeFrequency:v.Dynamic}),this.uIsIntersected=T({name:"u_isIntersected",type:"Int",data:this.isIntersected,accessType:y.PerDrawCall,writeFrequency:v.Dynamic}),this.uProjectId=T({name:"u_projectId",type:"Int",data:this.id,accessType:y.PerDrawCall,writeFrequency:v.Dynamic}),this.sTexture=pe({name:"s_texture",texture:this.primary_texture,accessType:y.PerDrawCall,writeFrequency:v.Dynamic}),this.shader=ge({program:r.program,resources:[this.sTexture,this.uProjectId,this.uModelMatrix,this.uIsIntersected,i,n],count:6})}select(){}resize(r,a){this.primary_texture.resize(r,a)}destroy(){this.primary_texture.destroy()}}class At{constructor(){o(this,"meshes");o(this,"cube_vbo");o(this,"cube_ebo");o(this,"cube_layout");o(this,"cube_input");o(this,"project_program");o(this,"cube_sampler");o(this,"project_positions");o(this,"current_angle");o(this,"radius");this.meshes=[],this.project_positions=[],this.current_angle=0,this.radius=5}create(r,a){this.cube_vbo=Ee({data:Be,byteSize:Be.byteLength}),this.cube_ebo=Le({data:we,byteSize:we.byteLength}),this.cube_layout=new Te([new Y("Position",F.Float,3),new Y("Normal",F.Float,3),new Y("TexCoords",F.Float,2)],3),this.cube_input=Me({vBuffer:this.cube_vbo,iBuffer:this.cube_ebo,layout:this.cube_layout,verticesCount:we.length}),this.project_program=ue({vertCode:Tt,fragCode:Ct}),this.cube_sampler=de({addressModeS:R.ClampToEdge,addressModeT:R.ClampToEdge,addressModeR:R.ClampToEdge,minFilter:k.Linear,magFilter:k.Linear});let i=Math.PI*2/x.count;for(let s=0;s<x.count;s++){const l=i*s,h=Math.cos(l)*this.radius,c=0,d=Math.sin(l)*this.radius;this.project_positions.push(me(h,c,d))}[{id:x.wgpu,label:"wgpu_1",translation:this.project_positions[0],scale:[.8,1,.12],vertexInput:this.cube_input,program:this.project_program,sampler:this.cube_sampler},{id:x.actixWeb,label:"actix_web_1",translation:this.project_positions[1],scale:[.8,1,.12],vertexInput:this.cube_input,program:this.project_program,sampler:this.cube_sampler},{id:x.mammoth,label:"mammoth_1",translation:this.project_positions[2],scale:[.8,1,.12],vertexInput:this.cube_input,program:this.project_program,sampler:this.cube_sampler},{id:x.silverback,label:"silverback_1",translation:this.project_positions[3],scale:[.8,1,.12],vertexInput:this.cube_input,program:this.project_program,sampler:this.cube_sampler},{id:x.pbr,label:"pbr_1",translation:this.project_positions[4],scale:[.8,1,.12],vertexInput:this.cube_input,program:this.project_program,sampler:this.cube_sampler},{id:x.sandbox,label:"sandbox_1",translation:this.project_positions[5],scale:[.8,1,.12],vertexInput:this.cube_input,program:this.project_program,sampler:this.cube_sampler},{id:x.vulkanLights,label:"vulkan_lights_1",translation:this.project_positions[6],scale:[.8,1,.12],vertexInput:this.cube_input,program:this.project_program,sampler:this.cube_sampler},{id:x.raytracer,label:"raytracer_1",translation:this.project_positions[7],scale:[.8,1,.12],vertexInput:this.cube_input,program:this.project_program,sampler:this.cube_sampler},{id:x.shmup,label:"shmup_1",translation:this.project_positions[8],scale:[.8,1,.12],vertexInput:this.cube_input,program:this.project_program,sampler:this.cube_sampler},{id:x.chameleon,label:"chameleon_1",translation:this.project_positions[9],scale:[.8,1,.12],vertexInput:this.cube_input,program:this.project_program,sampler:this.cube_sampler},{id:x.bankingApp,label:"banking_app_1",translation:this.project_positions[10],scale:[.8,1,.12],vertexInput:this.cube_input,program:this.project_program,sampler:this.cube_sampler},{id:x.gamesList,label:"games_list_1",translation:this.project_positions[11],scale:[.8,1,.12],vertexInput:this.cube_input,program:this.project_program,sampler:this.cube_sampler},{id:x.gravitySimulator,label:"gravity_simulator_1",translation:this.project_positions[12],scale:[.8,1,.12],vertexInput:this.cube_input,program:this.project_program,sampler:this.cube_sampler},{id:x.primeNumbers,label:"prime_numbers_1",translation:this.project_positions[13],scale:[.8,1,.12],vertexInput:this.cube_input,program:this.project_program,sampler:this.cube_sampler}].forEach(s=>{let h=he.GetInstance().GetTexture(s.label);if(!h)throw new Error(`Failed to create mesh - no matching texture with name, ${s.label}`);let c=new kt;c.create(s,h,r,a),this.addMesh(c)})}update(r){let a=r.deltaY*5e-4;this.current_angle+=a;let i=Math.PI*2/x.count,n=0;this.traverse(s=>{let l=this.current_angle+n*i,h=this.radius*Math.cos(l),c=0,d=this.radius*Math.sin(l);s.position=[h,c,d],s.modelMatrix=C(),le(s.modelMatrix,s.modelMatrix,s.position),fe(s.modelMatrix,s.modelMatrix,s.scale),s.uModelMatrix.update(new Float32Array(s.modelMatrix)),n++})}getMesh(r){return this.meshes.forEach(a=>{if(a.id==r)return a}),this.meshes[r]}addMesh(r){this.meshes.push(r)}traverse(r){this.meshes.forEach(a=>{r(a)})}destroy(){}resize(r,a){this.meshes.forEach(i=>{i.resize(r,a)})}}const Bt=`#version 300 es

in vec3 a_position; 
in vec2 a_uv;

out vec2 v_uv;
out vec3 v_clipPosition;


uniform mat4 u_model;

void main() 
{
    v_uv = a_uv;

    vec4 clipPosition = u_model * vec4(a_position, 1.0);

    v_clipPosition = vec3(clipPosition);

    gl_Position = clipPosition;
}`,St=`#version 300 es
precision highp float;

layout(location = 0) out vec4 scene_color;
layout(location = 1) out vec4 mesh_id_color;

in vec2 v_uv;
in vec3 v_clipPosition;

uniform sampler2D s_normalMap;
uniform float u_time;
uniform vec2 u_canvasDimensions;
uniform vec2 u_mousePosition;
uniform float u_currentView;

#define LIGHT_INTENSITY 0.01 

#define PI 3.14159265359


// 2D Classic Perlin Noise in GLSL
// Adapted from Stefan Gustavson's implementation

vec4 permute(vec4 x) {
    return mod(((x*34.0)+1.0)*x, 289.0);
}

vec2 fade(vec2 t) {
    return t*t*t*(t*(t*6.0-15.0)+10.0);
}

float cnoise(vec2 P) 
{
    vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);
    vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);
    Pi = mod(Pi, 289.0); // Modulo 289 to avoid truncation effects
    vec4 ix = Pi.xzxz;
    vec4 iy = Pi.yyww;
    vec4 fx = Pf.xzxz;
    vec4 fy = Pf.yyww;

    vec4 i = permute(permute(ix) + iy);

    vec4 gx = fract(i*(1.0/41.0)) * 2.0 - 1.0;
    vec4 gy = abs(gx) - 0.5;
    vec4 tx = floor(gx + 0.5);
    gx = gx - tx;

    vec2 g00 = vec2(gx.x,gy.x);
    vec2 g10 = vec2(gx.y,gy.y);
    vec2 g01 = vec2(gx.z,gy.z);
    vec2 g11 = vec2(gx.w,gy.w);

    vec4 norm = 1.79284291400159 - 0.85373472095314 * 
                vec4(dot(g00,g00), dot(g01,g01), dot(g10,g10), dot(g11,g11));
    g00 *= norm.x;
    g01 *= norm.y;
    g10 *= norm.z;
    g11 *= norm.w;

    vec4 n = vec4(dot(g00, vec2(fx.x, fy.x)), dot(g10, vec2(fx.y, fy.y)),
                  dot(g01, vec2(fx.z, fy.z)), dot(g11, vec2(fx.w, fy.w)));

    vec2 fade_xy = fade(Pf.xy);
    vec2 n_x = mix(n.xy, n.zw, fade_xy.x);
    float n_xy = mix(n_x.x, n_x.y, fade_xy.y);
    return 2.3 * n_xy;
}

float lines(vec2 uv, float offset)
{
    float a = abs(0.5 * sin(uv.y * 5.0) + offset * 0.25);
    return smoothstep(0.0, 0.25 + offset * 0.25, a);
}

mat2 rotate2d(float angle)
{
    return mat2(cos(angle),-sin(angle),
                sin(angle),cos(angle));
}

float random(vec2 p) 
{
    vec2 k1 = vec2(
            23.14069263277926, // e^pi (Gelfond's constant)
            2.665144142690225 // 2^sqrt(2) (Gelfond–Schneider constant)
    );
    return fract(
            cos(dot(p, k1)) * 12345.6789
    );
}

vec3 fadeLine(vec2 uv, vec2 mouse2D, vec3 col1, vec3 col2, vec3 col3)
{
    mouse2D = (mouse2D + 1.0) * 0.5;
    float n1 = cnoise(uv); //(*|/ ) -> scale (+|-) -> offset
    float n2 = cnoise(uv + 0.34 * 20.0);
    float n3 = cnoise(uv * 0.3 + 0.0 * 10.0);
    float nFinal = mix(mix(n1, n2, mouse2D.x), n3, mouse2D.y);
    vec2 baseUv = vec2(nFinal + 2.05 ) * 1.0; // (+|-) -> frequency (*|/ ) -> lines count

    float basePattern = lines(baseUv, 1.0);
    float secondPattern = lines(baseUv, 0.25);

    vec3 baseColor = mix(col1, col2, basePattern);
    vec3 secondBaseColor = mix(baseColor, col3, secondPattern);
    return secondBaseColor;
}


void main()
{
	vec2 mouse_position_clip_space = vec2(u_mousePosition.x * 2.0 - 1.0, u_mousePosition.y * 2.0 - 1.0);
    vec2 uv = v_uv;

    uv += mouse_position_clip_space * 0.1;

    vec3 col1 = fadeLine(uv, mouse_position_clip_space, vec3(0.1, 0.1, 0.25), vec3(0.1, 0.1, 0.25), vec3(0.1, 0.1, 0.25));
    vec3 finalCol = col1;

    vec2 uvRandom = v_uv;
    uvRandom.y *= random(vec2(uvRandom.y, 0.5));
    finalCol.rgb += random(uvRandom) * 0.04;

	scene_color = vec4(finalCol, 1.0);

	mesh_id_color = vec4(100.0);
}`;class Dt extends ve{constructor(){super();o(this,"vbo");o(this,"ebo");o(this,"layout");o(this,"input");o(this,"program");o(this,"shader");o(this,"normal_texture");o(this,"linear_repeat_sampler");o(this,"modelMatrix");o(this,"uModelMatrix");o(this,"uCurrentView");this.handleViewChange=this.handleViewChange.bind(this),this.onViewChange(this.handleViewChange)}create(a,i){this.vbo=Ee({data:new Float32Array(_e),byteSize:_e.length*4}),this.ebo=Le({data:new Uint16Array(Q),byteSize:Q.length*4}),this.layout=new Te([new Y("Position",F.Float,3),new Y("TexCoords",F.Float,2)],2),this.input=Me({vBuffer:this.vbo,iBuffer:this.ebo,layout:this.layout,verticesCount:Q.length}),this.program=ue({vertCode:Bt,fragCode:St});let n=he.GetInstance().GetTexture("background_1");if(!n)throw new Error("Failed to get texture from Resources: background_1");this.linear_repeat_sampler=de({addressModeS:R.Repeat,addressModeT:R.Repeat,addressModeR:R.Repeat,minFilter:k.Linear,magFilter:k.Linear}),this.normal_texture=J({target:D.Texture2D,nMipMaps:0,level:0,internalFormat:V.RGBA32F,format:U.RGBA,type:F.Float,usage:z.ReadWrite,sampler:this.linear_repeat_sampler,width:window.innerWidth,height:window.innerHeight,data:n}),this.modelMatrix=C(),le(this.modelMatrix,this.modelMatrix,[0,0,1]),this.uModelMatrix=T({name:"u_model",type:"Mat4x4f",data:new Float32Array(this.modelMatrix),accessType:y.PerDrawCall,writeFrequency:v.Dynamic});let s=pe({name:"s_normalMap",texture:this.normal_texture,writeFrequency:v.Dynamic,accessType:y.PerDrawCall});this.uCurrentView=T({name:"u_currentView",type:"Float",data:0,accessType:y.PerDrawCall,writeFrequency:v.Dynamic}),this.shader=ge({program:this.program,resources:[s,this.uModelMatrix,a,i,this.uCurrentView],count:5})}handleViewChange(a){switch(a){case"home":this.uCurrentView.update(0);break;case"about":this.uCurrentView.update(0);break;default:this.uCurrentView.update(1);break}}destroy(){this.program.destroy()}}class Pt extends ve{constructor(){super();o(this,"currentMousePosition");o(this,"uTime");o(this,"uMousePosition");o(this,"uCanvasDimensions");o(this,"camera");o(this,"canvas");o(this,"intersectedProject");o(this,"selectedProject");o(this,"projectsList");o(this,"renderer");o(this,"background");this.intersectedProject=null,this.selectedProject=null,this.handleViewChange=this.handleViewChange.bind(this),this.onViewChange(this.handleViewChange)}create(){this.canvas=document.getElementById("webgl"),this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight;let a={canvas:this.canvas,name:"demo",backend:He.WebGL,pixelViewportWidth:this.canvas.width,pixelViewportHeight:this.canvas.height};ut(a),this.currentMousePosition=Fe(),this.uCanvasDimensions=T({type:"Vec2f",name:"u_canvasDimensions",data:new Float32Array([this.canvas.width,this.canvas.height]),writeFrequency:v.Dynamic,accessType:y.PerMaterial}),this.uTime=T({type:"Float",name:"u_time",data:performance.now(),writeFrequency:v.Dynamic,accessType:y.PerFrame}),this.uMousePosition=T({type:"Vec2f",name:"u_mousePosition",data:new Float32Array(this.currentMousePosition),writeFrequency:v.Dynamic,accessType:y.PerFrame});let i=new Ft([0,4,20]);i.target=[0,0,0];let n=T({type:"Mat4x4f",data:new Float32Array(i.GetProjectionMatrix(1,1)),name:"u_projection",writeFrequency:v.Dynamic,accessType:y.PerFrame}),s=T({type:"Mat4x4f",data:new Float32Array(i.GetViewMatrix()),name:"u_view",writeFrequency:v.Dynamic,accessType:y.PerFrame});this.camera={perspectiveCamera:i,uProjection:n,uView:s},this.renderer=new Et,this.renderer.create(this.uCanvasDimensions,this.uMousePosition),this.projectsList=new At,this.projectsList.create(s,n),this.background=new Dt,this.background.create(this.uCanvasDimensions,this.uMousePosition),window.addEventListener("resize",()=>this.respondToWindowResize()),window.addEventListener("wheel",l=>this.respondToScroll(l)),window.addEventListener("mousemove",l=>this.respondToMouseMove(l.clientX,l.clientY)),window.addEventListener("click",l=>this.respondToMouseClick(l)),window.addEventListener("close",()=>{}),this.respondToMouseMove(0,0)}run(){window.requestAnimationFrame(()=>{this.uTime.update(performance.now()*5e-4),this.getCurrentView()=="home"?this.renderer.render(this.projectsList,this.background):this.renderer.renderBackgroundOnly(this.background),this.run()})}respondToMouseMove(a,i){let n=(i-this.canvas.height)*-1/this.canvas.height,s=a/this.canvas.width;this.currentMousePosition=[s,n],this.uMousePosition.update(new Float32Array(this.currentMousePosition));const l=this.canvas.getBoundingClientRect(),h=a-l.left,c=i-l.top;this.getCurrentView()=="home"&&this.checkMouseProjectIntersection([h,c]);let d=Fe();d[0]=s*2-1,d[1]=n*2-1;let p=xt(d[0],d[1],.99,1),g=ke(C(),this.camera.perspectiveCamera.GetProjectionMatrix(1,1)),f=Ae(Re(),p,g),m=ke(C(),this.camera.perspectiveCamera.GetViewMatrix()),_=Ae(Re(),f,m);Rt(_,_,1/_[3]),this.projectsList.traverse(u=>{const b=wt(Ne(),u.position,me(_[0],_[1],_[2]));yt(b)<8.5?(vt(C(),u.position,me(_[0],_[1],-4),me(0,1,0)),u.modelMatrix=C(),le(u.modelMatrix,u.modelMatrix,u.position),fe(u.modelMatrix,u.modelMatrix,u.scale),u.uModelMatrix.update(new Float32Array(u.modelMatrix))):(u.modelMatrix=C(),le(u.modelMatrix,u.modelMatrix,u.position),fe(u.modelMatrix,u.modelMatrix,u.scale),u.uModelMatrix.update(new Float32Array(u.modelMatrix)))})}respondToMouseClick(a){this.getCurrentView()=="home"&&this.intersectedProject!=null&&(this.selectedProject=this.intersectedProject,this.projectsList.getMesh(this.selectedProject),this.triggerViewChange(Lt[this.intersectedProject]),this.intersectedProject=null)}respondToScroll(a){this.getCurrentView()=="home"&&this.projectsList.update(a)}checkMouseProjectIntersection(a){const i=new Float32Array(4),n=a[0]*this.renderer.highResolutionFactor,s=(this.canvas.height-a[1])*this.renderer.highResolutionFactor;this.renderer.sceneBuffer.readPixels(X.Color1,n,s,1,1,U.RGBA,F.Float,i);const l=document.getElementById("app");i[0]<x.count?(l.style.cursor="pointer",this.projectsList.traverse(h=>{h.id==i[0]?(this.intersectedProject=h.id,h.isIntersected=1,h.uIsIntersected.update(h.isIntersected)):(h.isIntersected=0,h.uIsIntersected.update(h.isIntersected))})):(l.style.cursor="default",this.intersectedProject=null,this.projectsList.traverse(h=>{h.isIntersected=0,h.uIsIntersected.update(h.isIntersected)}))}respondToWindowResize(){const a=window.innerWidth,i=window.innerHeight;(a!=this.canvas.width||i!=this.canvas.height)&&(this.canvas.width=a,this.canvas.height=i),this.uCanvasDimensions.update(new Float32Array([a,i])),oe({pixelWidth:a,pixelHeight:i}),this.renderer.resize(a,i),this.projectsList.resize(a,i)}handleViewChange(a){}}const It=`<div class="header_container">
    <p class="header_name"> SAMUEL BROOKMAN PORTFOLIO 2024 </p>
    <div class="header_links">
        <p id="home_link" class="header_link active"> HOME </p>
        <p id="about_link" class="header_link"> ABOUT </p>
    </div>
    <div>
    </div>
    <nav class="header_navbar">
        <a href="https://github.com/KenM4sters" target="_blank" class="header_navbar_item"> GITHUB </a>
        <a href="https://discord.com/users/1156685102101839962" target="_blank" class="header_navbar_item"> DISCORD </a>
        <a href="mailto:sam.brookman414@hotmail.com" class="header_navbar_item"> CONTACT </a>
    </nav>
</div>`,Ut=`<div class="home_container">
    <div class="home_title_container">
        <h1> ASPIRING SOFTWARE ENGINEER </h1>
    </div>
    <div class="projects_list">
        <div class="projects_list_title">
            <p>Projects</p>
        </div>
        <p class="projects_list_hint"> scroll to spin the carousel and click on any project </p>
    </div>
</div>`,Gt=`<div class="about_container">
    <div class="about_content">
        <div class="about_section">
            <p class="about_title">
                Background
            </p>
            <p class="about_description">
                Hi! My name is Samuel Brookman, and I'm a developing software engineer currently looking for career
                opportunities within the UK.  
            </p>
            <p class="about_description">
                As you can probably tell from my projects, my programming experience lies very heavily with graphics rendering using systems languages
                like C, C++ and more recently Rust, along with various different graphics APIs, although I've always maintained a strong interest in web development since programming for the first time.
            </p>
        </div>
        <div class="about_section">
            <p class="about_title">
                Development
            </p>
            <p class="about_description">
                What I find the most enjoyable about programming is solving complex problems with simple solutions. With my free time, I mostly decide
                to develop open-source libraries that provide a simplified abstraction over some underlying idea/framework, whether it be 
                maths, physics, graphics or web related.  
            </p>
        </div>
        <div class="about_section">
            <p class="about_title">
                Portfolio
            </p>
            <p class="about_description">
                This portfolio has been built entirely by myself using my own WebGL2.0 rendering framework, Chameleon, which
                you can learn more about by clickling on its project card.
            </p>
        </div>
    </div>
</div>`;class Ht{constructor(r){o(this,"html");o(this,"props");this.props=r,this.html=`
        <div class="project_container">
            <div class="project_landing_container">
                <div class="project_description_container">
                    <p class="project_title"> ${this.props.title} </p>
                    <div class="project_metadata_container">
                        <div class="project_metadata_item">
                            <p class="metadata_item_title"> Features </p>
                            ${this.props.features.map(a=>`<p class="metadata_item_description">${a}</p>`).join("")}
                        </div>
                        <div class="project_metadata_item">
                            <p class="metadata_item_title"> Status </p>
                            <p class="metadata_item_description"> ${this.props.status} </p>
                        </div>
                        <div class="project_metadata_item">
                            <p class="metadata_item_title"> Tech Stack </p>
                            ${this.props.techStack.map(a=>`<p class="metadata_item_description">${a}</p>`).join("")}
                        </div>
                        <div class="project_metadata_item">
                            <p class="metadata_item_title"> Date </p>
                            <p class="metadata_item_description"> ${this.props.date} </p>
                        </div>
                        <div class="project_metadata_item">
                            <p class="metadata_item_title"> Source Code </p>
                            <a class="metadata_item_link" href="${this.props.github}" target="_blank">visit repository</a>
                        </div>
                    </div>
                    <div class="project_details_container">
                        <div class="project_extras_item">
                            <p class="extras_title"> Brief </p>
                            <p class="extras_description"> ${this.props.brief} </p>
                        </div>
                        <div class="project_extras_item">
                            <p class="extras_title"> Motivation </p>
                            <p class="extras_description"> ${this.props.motivation} </p>
                        </div>
                        <div class="project_extras_item">
                            <p class="extras_title"> Challenges </p>
                            <p class="extras_description"> ${this.props.challenges} </p>
                        </div>
                    </div>
                </div>
                <div class="project_image_container">
                    <img class="project_image" src=${this.props.image1} />
                </div>
            </div>
        </div>
        `}}let Nt=[{divId:"mammoth",title:"Mammoth",brief:"An object-oriented rendering framework that supports OpenGL and Vulkan backends with the ambition to support DirectX and Metal in the near future.",techStack:["C++","CMake","OpenGL","Vulkan"],features:["object-oriented","renderer-agnostic"],date:"05/24",github:"https://github.com/KenM4sters/Mammoth2D",status:"ongoing",image1:"/chameleon/images/mammoth/mammoth_1.png",motivation:"I've always enjoyed exploring different graphics backends and wanted to put together a project that offered a rendering framework that was completely/partially agnostic of the backend. It's been an amazingly satisfying project being able to recognise the similarities between what appear as very different frameworks at first value, and, eventhough I've really enjoyed exploring Rust and WGPU recently, I am looking forward to begin working on the DX12 and Metal backends.",challenges:"The biggest challenge with this project was probably starting... Each API has its own quirks that made comming up with a completely agnostic frontend quite hard to imagine. Eventhough I opted for the more simplistic and intuitive OOP approach of extensively using polymorphism to abstract context-specific classes into a single one, other more data-driven approaches exist that potentially offer less of a peformance penalty."},{divId:"silverback",title:"Silverback",brief:"A data-driven Entity-Component-System (ECS) framework with an emphasis on Template-Meta-Programming (TMP) to provide an API that offers a comfortable balance between peformance, flexibilty and simplicity.",techStack:["C++","CMake"],features:["data-driven","template-meta-programming"],date:"06/24",github:"https://github.com/KenM4sters/Silverback",status:"completed",image1:"/chameleon/images/silverback/silverback_1.png",motivation:"Eventhough I generally enjoy the Object-Oriented programming paradigm and often find that it offers the best balance between flexibilty, rapid prototyping and performance, programming in C and Rust most notably definitely made me recognise and appreciate that there's a time and a place for it, and I've often thought that organising mesh-related data for game engines strikes as a good candidate for more data-driven programming.",challenges:"Comming up with an extremely intuitive API that worked with the, what I found to be at least, quite complex mechanics of the underlying ECS framework was definitely a difficult task. I mostly took insipration from well-renowned frameworks like Flecs and Entt, but putting everything together with my own flair was not easy by any means."},{divId:"wgpu",title:"Phoenix",brief:"A rendering framework written in Rust that uses wgpu for graphics rendering, intended to be used to create small 2D/3D games.",techStack:["Rust","wgpu","winit","cgmath"],features:["highly modular","renderer-agnostic"],date:"07/24",github:"https://github.com/KenM4sters/phoenix",status:"ongoing",image1:"/chameleon/images/wgpu/wgpu_1.png",motivation:"I've had experience with a few languages at this point, but the one that I definitely find myself enjoying the most is Rust. Comming from a C++ background, I've always enjoyed working with systems languages that hand you the reigns on the data that you want to work with, but I've also had a soft spot for web development and the more modern syntax of languages like JS/TS. Rust bridges this gap perfectly.",challenges:"From my experience, learning Rust definitely isn't easy, but I've never had an issue appreciating why it operates the way that it does. Wgpu definitely also has its nuances, and I'd be lying if I said that I didn't miss the more robust vulkan framework, but generally I find that it's great to work with and being able to write rust code in a graphics environment is undeniably awesome."},{divId:"chameleon",title:"Chameleon",brief:"Much like Mammoth, the C++ version of this project, Chameleon is an Object-Oriented rendering framework written in Typescript that provides a (slightly) simplified abstraction over WebGL2.0 and WebGPU (WIP), designed to make orgnaizing rendering data much easier, with very minimal peformance cost.",techStack:["Typescript","Node","WebGL","WebGPU"],features:["object-oriented","renderer-agnostic"],date:"06/24",github:"https://github.com/KenM4sters/chameleon",status:"ongoing",image1:"/chameleon/images/chameleon/chameleon_1.png",motivation:"I've always wanted to write a rendering framework that's agnostic of the underlying API, hence the reason for Mammoth, but I also wanted a version of the framework for the web without using emscripten.",challenges:"Most of my experience lies with systems langauges like C and C++, and I'd definitely say that my TS and DOM knowledge could use some tutorials."},{divId:"pbr",title:"Physically Based Renderer",brief:"A small OpenGL application that uses the micro-facet model for Physically-Based rendering, along with 3D model loading and an imGui interface that allows the users to control material data from docked panels.",techStack:["C++","OpenGL","imGui","Assimp"],features:["physically-based rendering","3d model loading","user interface","skybox","environment shading"],date:"03/24",github:"https://github.com/KenM4sters/Reach",status:"completed",image1:"/chameleon/images/pbr/pbr_1.png",motivation:"To practice opengl and c++ programming through exploring industry-standard lighting and shading in 3D graphics applications.",challenges:"Understanding and implementating the entire PBR pipeline was definitely the biggest hurdle in this project, particularly environment shading which involves mapping the light of the environment to the shading of objects depending on their reflective/refractive properties."},{divId:"sandbox",title:"Sandbox",brief:"An OpenGL application that supports 3D model loading through the ASSIMP library and custom terrrain generation.",techStack:["C++","OpenGL","imGui","Assimp"],features:["object-oriented","terrain generation","3D model loading","skybox","grass","billboards"],date:"03/24",github:"https://github.com/KenM4sters/sandbox",status:"completed",image1:"/chameleon/images/sandbox/sandbox_1.png",motivation:"The primary motivation behind this project was to continue practicing 3D rendering using the OpenGL API, as well as to consolidate my, at the time, newly obtained C++ programming knowledge.",challenges:"This was really my first experience using textures for something other than color data, which definitely took a while to get my head around at first."},{divId:"vulkanLights",title:"Vulkan Lights",brief:"A simple implementation of instanced point lights and 3d model of a star destroyer that the user can fly around with an intuitive camera system",techStack:["C++","CMake","Vulkan","TinyObj"],features:["instancing","3d model loading","flight camera"],date:"12/23",github:"https://github.com/KenM4sters/game-engine-vulkan",status:"completed",image1:"/chameleon/images/vulkan_lights/vulkan_lights_1.png",motivation:"To begin learning the Vulkan API after a few succesful and very enjoayble OpenGL projects, along with more modern C++ practices",challenges:"Learning vulkan was definitely a huge step up from OpenGL, with concepts like swpachains, command buffers, semaphores and fences being completely foreign to me at the time."},{divId:"raytracer",title:"Raytracer",brief:"A simple multi-threaded CPU raytracer that computes the path of rays through a scene of planes and spheres to produce a single image with exceptional shading information through path tracing.",techStack:["C++","imGui"],features:["multi-threading","bounces","shadows","plane intersection","sphere intersection"],date:"03/24",github:"https://github.com/KenM4sters/Raytracer",status:"completed",image1:"/chameleon/images/raytracer/raytracer_1.png",motivation:"To explore the realm of raytracing through a very raw implementation on the CPU",challenges:"I ended up moving on from this project fairly quickly as I had a keen desire to get to grips with Vulkan at the time, so I didn't encounter that many problems, although this was my first time using the imGui libary, which in actuallity was very straight-forward."},{divId:"shmup",title:"Shmup",brief:"A very simple Shoot-em-up written in plain C using the OpenGL API for graphics rendering",techStack:["C","Make","OpenGL"],features:["instancing"],date:"10/23",github:"https://github.com/KenM4sters/opengl-game",status:"completed",image1:"/chameleon/images/shmup/shmup_1.png",motivation:"This was one of my vert first programming projects, and my first experience writing with a systems language. It's incredibly simple, but I owe everything that I know today that tiny application that sparked an incredibly profound interest in graphics rendering and systems programming in general.",challenges:"Given that this my first project using a systems language, as well as my first time using OpenGL, naming every challened that I encountered would surely be unsuitable here, but organsing my project and working with OpenGL was definitely no walk in the park."},{divId:"bankingApp",title:"Banking App",brief:"A full-stack web application that uses a React frontend to make calls to a Java backend that communicates with a PostgreSQL databse to store and modify user data.",techStack:["Typescript","React","Java","Spring","PostgreSQL"],features:["user authentication"],date:"02/24",github:"https://github.com/KenM4sters/banking-app-frontend",status:"completed",image1:"/chameleon/images/banking_app/banking_app_1.png",motivation:"To explore the springboot framework in particular and practice integrating it with a React frontend",challenges:"I was very new to programming in Java at the time, although I had experience with OOP in C++, so Java's quirks was definitely something that I had to get used to, although IntelliJ made the transition much smoother than I imagined."},{divId:"gamesList",title:"Games List",brief:"A full-stack web application that uses a React frontend to make calls to a Java backend that communicates with a PostgreSQL databse to store and modify data about game titles.",techStack:["Typescript","React","Java","Spring","PostgreSQL"],features:["user authentication"],date:"02/24",github:"https://github.com/KenM4sters/gameslist-frontend",status:"completed",image1:"/chameleon/images/games_list/games_list_1.png",motivation:"To explore the springboot framework in particular and practice integrating it with a React frontend",challenges:"I was very new to programming in Java at the time, although I had experience with OOP in C++, so Java's quirks was definitely something that I had to get used to, although IntelliJ made the transition much smoother than I imagined."},{divId:"actixWeb",title:"Actix Web",brief:"A very simple web server written in Rust using the Actix Web framework, which was later used in a fullstack web application to make calls to a PostgreSQL database",techStack:["Rust","Actix Web"],features:["web-server"],date:"10/23",github:"https://github.com/KenM4sters/actix-web-postgresql-api",status:"completed",image1:"/chameleon/images/actix_web/actix_web_1.png",motivation:"I wanted to create a test application to act almost like a sandbox which I'd progressively improve alongside learning from the Rust Tutorial Book.",challenges:"Learning Rust for the fist time definitely wasn't easy, especially since my knowledge of systems programming at the time was very hit and miss, but I immediately found a joy in programming in Rust that I knew would eventually catch up to me again."},{divId:"gravitySimulator",title:"Gravity Simulator",brief:"A very simple 2D simulation of two particles with some initial velocity trapped in a binary orbit.",techStack:["Rust","Actix Web"],features:["web-server"],date:"09/23",github:"https://github.com/KenM4sters/gravity-simulator",status:"completed",image1:"/chameleon/images/gravity_simulator/gravity_simulator_1.png",motivation:"Having just started to learn ThreeJS and the OOP paradigm, I wanted to try using the library for something more relevant than random spinning models, so I decided to put together a simple 2D gravity simulation.",challenges:"This simulation aims to be as realistic as possible, so integrating proper newtonian mechanics left me searching the web quite a lot."},{divId:"primeNumbers",title:"Prime Numbers Visualised",brief:"A visualisation of the prime numbers from 2 - 1000 as points on a grid.",techStack:["Rust","Actix Web"],features:["web-server"],date:"09/23",github:"https://github.com/KenM4sters/prime-numbers-visualised",status:"completed",image1:"/chameleon/images/prime_numbers/prime_numbers_1.png",motivation:"Practicing OOP and using the ThreeJS graphics library",challenges:"It's a very small application, so there wasn't really anything too challenging here, but I decided to try blooming the particles with post-processing effects for the first time."}];class Ot extends ve{constructor(){super();o(this,"app");o(this,"homeLink");o(this,"aboutLink");this.handleViewChange=this.handleViewChange.bind(this),this.onViewChange(this.handleViewChange)}create(a){const i=document.querySelector(".header_wrapper");if(!i)throw new Error("Failed to find dom element with class list containing: header");i.innerHTML=It;const n=document.querySelector(".home_wrapper");if(!n)throw new Error("Failed to find dom element with class list containing: home_wrapper");n.innerHTML=Ut;const s=document.querySelector(".about_wrapper");if(!s)throw new Error("Failed to find dom element with class list containing: about_wrapper");s.innerHTML=Gt,Nt.forEach(c=>{const d=new Ht(c),p=document.getElementById(c.divId);if(!p)throw new Error(`Failed to find project with projectDivId: ${c.divId}`);p.innerHTML=d.html});const l=document.querySelector("#home_link");if(!l)throw new Error("Failed to find dom element with id: home_link");this.homeLink=l,this.homeLink.addEventListener("click",()=>{this.triggerViewChange("home")});const h=document.querySelector("#about_link");if(!h)throw new Error("Failed to find dom element with id: about_link");this.aboutLink=h,this.aboutLink.addEventListener("click",()=>{this.triggerViewChange("about")}),this.app=document.querySelector("#app"),window.addEventListener("wheel",()=>{document.querySelectorAll(".scroll_trigger_fade_in").forEach(d=>{const p=d.getBoundingClientRect(),g=window.innerHeight||document.documentElement.clientHeight;p.top<=g*.75&&p.bottom>=0&&(d.classList.contains("fade_in")||d.classList.add("fade_in"))})})}handleViewChange(a){switch(document.querySelectorAll(".scroll_trigger_fade_in").forEach(n=>{n.classList.contains("fade_in")&&n.classList.remove("fade_in")}),a){case"home":this.setForHome();break;case"about":this.setForAbout();break;default:this.setForProject();break}}setForHome(){this.app.style.overflowX="hidden",this.app.style.overflowY="hidden",this.homeLink.classList.add("active"),this.aboutLink.classList.remove("active"),this.aboutLink.classList.remove("expanded")}setForAbout(){this.app.style.overflowX="hidden",this.app.style.overflowY="hidden",this.app.style.cursor="default",this.aboutLink.classList.add("active"),this.homeLink.classList.remove("active")}setForProject(){this.app.style.overflowX="hidden",this.app.style.overflowY="visible",this.app.style.cursor="default",this.app.classList.add("fade_white"),this.aboutLink.classList.remove("active"),this.aboutLink.classList.remove("expanded"),this.homeLink.classList.remove("active")}}const jt=`<div class="preloader_wrapper">
    <div class="preloader_icon"></div>
    <p class="preloader_caption"> Samuel Brookman Portfolio 2024</p>
</div>`;class Vt{constructor(){const r=new Mt,a=new Pt,i=he.GetInstance(),n=document.querySelector(".header_wrapper");if(!n)throw new Error("Failed to find header element");n.innerHTML="";const s=document.getElementById("home");if(!s)throw new Error("Failed to find home element");s.innerHTML=jt,i.LoadAllAssets(()=>{console.log("ready"),new Ot().create(r),a.create(),a.run()})}}window.addEventListener("DOMContentLoaded",()=>{new Vt});
